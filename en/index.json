[{"content":"","date":"May 7, 2025","externalUrl":null,"permalink":"/en/tags/android/","section":"Tags","summary":"","title":"Android","type":"tags"},{"content":"Explore my projects by type and context.\n","date":"May 7, 2025","externalUrl":null,"permalink":"/en/categories/","section":"Categories","summary":"Explore my projects by type and context.","title":"Categories","type":"categories"},{"content":"","date":"7 May 2025","externalUrl":null,"permalink":"/series/d%C3%A9veloppement-mobile/","section":"Séries","summary":"","title":"Développement Mobile","type":"series"},{"content":"","date":"May 7, 2025","externalUrl":null,"permalink":"/en/tags/drone/","section":"Tags","summary":"","title":"Drone","type":"tags"},{"content":"","date":"May 7, 2025","externalUrl":null,"permalink":"/en/tags/kotlin/","section":"Tags","summary":"","title":"Kotlin","type":"tags"},{"content":" Full-Stack Developer \u0026amp; Software Engineer | Computer Science Student 👋 Welcome to my portfolio! # I\u0026rsquo;m Léon Fievet, a versatile developer who transforms complex ideas into robust and high-performance software solutions. Currently studying at IUT Montpellier, I master a wide range of technologies: from modern web development to Go microservices, through Rust systems programming and embedded systems.\nMy philosophy: Every project is an opportunity to innovate and create value for users. 🚀 What I offer # Multi-Paradigm Development Versatility From embedded to cloud I master different programming paradigms: Go for high-performance microservices, Rust for secure systems programming, JavaScript/TypeScript for modern web, and Python for scripting and AI. Architecture \u0026amp; Infrastructure Expertise Scalable solutions Microservices architecture design, Docker/Kubernetes deployment, REST and GraphQL API development. I create robust and performant distributed systems. Security \u0026amp; Performance Priority Reliable and optimized code Memory safety with Rust, concurrency with Go, low-level optimizations, and security best practices. I develop fast, safe, and maintainable applications. Continuous Innovation R\u0026amp;D Emerging technologies Active exploration of WebAssembly, IoT, embedded systems, and edge computing. I stay at the forefront of technology to offer innovative solutions. 💡 Beyond the code # As an FPV drone pilot and builder, I apply the same passion for precision and innovation to my development projects. This activity has taught me the importance of attention to detail, perseverance, and creativity - qualities I bring to every line of code.\nExplore my projects Contact me ","date":"May 7, 2025","externalUrl":null,"permalink":"/en/","section":"Léon Fievet - Full-Stack Developer \u0026 Software Engineer","summary":"Full-Stack Developer \u0026amp; Software Engineer | Computer Science Student 👋 Welcome to my portfolio!","title":"Léon Fievet - Full-Stack Developer \u0026 Software Engineer","type":"page"},{"content":"","date":"May 7, 2025","externalUrl":null,"permalink":"/en/series/mobile-development/","section":"Series","summary":"","title":"Mobile Development","type":"series"},{"content":"","date":"May 7, 2025","externalUrl":null,"permalink":"/en/categories/personal-projects/","section":"Categories","summary":"","title":"Personal Projects","type":"categories"},{"content":"Discover below my various projects. You can also explore them by categories, technologies or series.\n","date":"May 7, 2025","externalUrl":null,"permalink":"/en/projets/","section":"Projects","summary":"Discover below my various projects.","title":"Projects","type":"projets"},{"content":"","date":"7 May 2025","externalUrl":null,"permalink":"/categories/projets-personnels/","section":"Catégories","summary":"","title":"Projets Personnels","type":"categories"},{"content":"","date":"May 7, 2025","externalUrl":null,"permalink":"/en/tags/qr-code/","section":"Tags","summary":"","title":"QR Code","type":"tags"},{"content":"Explore my projects grouped by thematic series.\n","date":"May 7, 2025","externalUrl":null,"permalink":"/en/series/","section":"Series","summary":"Explore my projects grouped by thematic series.","title":"Series","type":"series"},{"content":" SkyFuel is an Android application dedicated to the efficient management of drone batteries, allowing pilots and operators to maintain their batteries in good condition and optimize their lifespan. Version 1.0.0 Android App Open Source Pixnop/SkyFuel Kotlin 0 0 Complete SkyFuel interface Main Features # 1. Battery Management # Battery Registration: Easily add new batteries to your inventory by specifying:\nBrand and model Number of cells Capacity (mAh) Type (LiPo, Li-ion, etc.) Purchase date Serial number Custom notes Main Dashboard: View all your batteries and their current status at a glance.\nFiltering and Search: Quickly find a specific battery by status, model, or other criteria. 2. Status Tracking and Lifecycle Management # Multiple Statuses:\nCharged (ready to use) Discharged (requires charging) In storage (optimal charge level for long-term storage) Out of service (battery to be recycled) Voltage Recording: Document voltage levels at different stages to monitor battery health.\nCycle Counter: Automatic tracking of the number of charge/discharge cycles for each battery.\nUsage History: View the complete history of status changes and usage.\nLifespan Estimation: Calculation of remaining lifespan based on the number of cycles and performance.\n3. QR Code System # Unique QR Code Generation: Automatic creation of a QR code for each registered battery.\nEasy Printing: Export QR codes in formats optimized for printing on durable labels.\nQuick Access: Scanning a QR code instantly directs to the corresponding battery page.\nExpress Status Modification: Quickly change the status of a battery after scanning its QR code.\nUnique QR code generation for each battery 4. Alert and Reminder System # Extended Charging Notifications: Alerts for batteries left charging for too long.\nExtended Discharge Alerts: Reminders for batteries left discharged, which can damage them.\nStorage Reminders: Notifications to prepare batteries for long-term storage if unused.\nEnd-of-Life Alerts: Notifications when a battery approaches its theoretical end of life based on cycles.\n5. Statistics and Reports # Analytical Dashboard: Visualize usage trends and the overall status of your battery fleet.\nHealth Reports: Generate detailed reports on the health and performance of each battery.\nUsage Statistics: Track which batteries are most used and which might be underutilized.\nData Export: Export your data in various formats (CSV, PDF) for external analysis.\nTechnical Specifications # Platforms: Application available on Android Storage: Local data storage with cloud synchronization option Performance: Low resource consumption, optimized for field use Connectivity: Offline mode available with automatic synchronization Benefits # Extend the lifespan of your batteries by following best charging and storage practices Avoid in-flight failures through better battery status management Reduce costs by maximizing the lifespan of each battery Save time with a quick identification system using QR codes Improve safety by identifying potentially defective batteries Target Audience # Professional drone pilots Drone video production companies Drone inspection services Aerial mapping companies Enthusiasts with multiple drones and batteries Download SkyFuel v1.0.0 on GitHub Android Kotlin QR Code Battery Management ","date":"May 7, 2025","externalUrl":null,"permalink":"/en/projets/skyfuel/","section":"Projects","summary":"SkyFuel is an Android application dedicated to the efficient management of drone batteries, allowing pilots and operators to maintain their batteries in good condition and optimize their lifespan.","title":"SkyFuel - Drone Battery Management App","type":"projets"},{"content":"Discover the different technologies I\u0026rsquo;ve used in my projects.\n","date":"May 7, 2025","externalUrl":null,"permalink":"/en/tags/","section":"Tags","summary":"Discover the different technologies I\u0026rsquo;ve used in my projects.","title":"Tags","type":"tags"},{"content":"","date":"April 15, 2024","externalUrl":null,"permalink":"/en/series/eco-med/","section":"Series","summary":"","title":"ECO-MED","type":"series"},{"content":" ECO-MED Application Hub # Development of a centralized platform for ECO-MED\u0026rsquo;s internal tools.\nDescription # Design and implementation of a centralized dashboard Integration of multiple business applications into a single interface Single Sign-On (SSO) authentication system User rights management Technologies Used # Frontend: React, Redux, Material UI Backend: Node.js, Express Database: MongoDB Authentication: JWT Results # Simplified tool access for employees Reduced training time for tools Consistent and modern interface ","date":"April 15, 2024","externalUrl":null,"permalink":"/en/projets/hub-eco-med/","section":"Projects","summary":"ECO-MED Application Hub # Development of a centralized platform for ECO-MED\u0026rsquo;s internal tools.","title":"ECO-MED Application Hub","type":"projets"},{"content":"","date":"April 15, 2024","externalUrl":null,"permalink":"/en/tags/express/","section":"Tags","summary":"","title":"Express","type":"tags"},{"content":"","date":"April 15, 2024","externalUrl":null,"permalink":"/en/tags/jwt/","section":"Tags","summary":"","title":"JWT","type":"tags"},{"content":"","date":"April 15, 2024","externalUrl":null,"permalink":"/en/tags/mongodb/","section":"Tags","summary":"","title":"MongoDB","type":"tags"},{"content":"","date":"April 15, 2024","externalUrl":null,"permalink":"/en/tags/node.js/","section":"Tags","summary":"","title":"Node.js","type":"tags"},{"content":"","date":"April 15, 2024","externalUrl":null,"permalink":"/en/categories/professional-projects/","section":"Categories","summary":"","title":"Professional Projects","type":"categories"},{"content":"","date":"15 April 2024","externalUrl":null,"permalink":"/categories/projets-professionnels/","section":"Catégories","summary":"","title":"Projets Professionnels","type":"categories"},{"content":"","date":"April 15, 2024","externalUrl":null,"permalink":"/en/tags/react/","section":"Tags","summary":"","title":"React","type":"tags"},{"content":"","date":"April 1, 2024","externalUrl":null,"permalink":"/en/tags/google-maps-api/","section":"Tags","summary":"","title":"Google Maps API","type":"tags"},{"content":" Internal Carpooling Application # Design of a dedicated carpooling application for ECO-MED employees.\nDescription # Trip creation and search system Notification and reminder management Interactive map for visualizing routes CO2 savings statistics Technologies Used # React Native Node.js PostgreSQL Google Maps API Key Features # Intuitive and responsive interface Integrated messaging system between drivers and passengers Automatic carbon savings calculation Trip history ","date":"April 1, 2024","externalUrl":null,"permalink":"/en/projets/covoiturage-interne/","section":"Projects","summary":"Internal Carpooling Application # Design of a dedicated carpooling application for ECO-MED employees.","title":"Internal Carpooling Application","type":"projets"},{"content":"","date":"April 1, 2024","externalUrl":null,"permalink":"/en/tags/postgresql/","section":"Tags","summary":"","title":"PostgreSQL","type":"tags"},{"content":"","date":"April 1, 2024","externalUrl":null,"permalink":"/en/tags/react-native/","section":"Tags","summary":"","title":"React Native","type":"tags"},{"content":"","date":"March 5, 2024","externalUrl":null,"permalink":"/en/tags/arduino/","section":"Tags","summary":"","title":"Arduino","type":"tags"},{"content":"","date":"March 5, 2024","externalUrl":null,"permalink":"/en/tags/drones/","section":"Tags","summary":"","title":"Drones","type":"tags"},{"content":"","date":"March 5, 2024","externalUrl":null,"permalink":"/en/tags/embedded/","section":"Tags","summary":"","title":"Embedded","type":"tags"},{"content":"","date":"March 5, 2024","externalUrl":null,"permalink":"/en/tags/esp32/","section":"Tags","summary":"","title":"ESP32","type":"tags"},{"content":" Open source flight controller for FPV racing drones, developed in embedded Rust with real-time performance and maximum safety. 🚁 1000Hz loop rate | 💾 \u003c 128KB RAM 🎯 Project Genesis # As an FPV drone enthusiast, I wanted to create my own flight controller by combining my systems programming skills with my hardware knowledge. FlightCore was born from this ambition: modern, safe, and performant firmware thanks to Rust.\nInnovation: First production-ready FPV flight controller written entirely in Rust 🏗️ Hardware \u0026amp; Software Architecture # Hardware Platform STM32F4 - MCU STM32F405 @ 168MHz - Gyroscope/Accelerometer MPU6000 via SPI - DShot600 for ESCs (digital protocol) - ELRS compatible receiver (900MHz/2.4GHz) - External flash for blackbox logging Rust no_std Implementation Embedded - RTIC framework for real-time - Zero heap allocation - all static - Priority interrupts for sensors - DMA for critical communications Stabilization Algorithms Control Theory - PID controllers with anti-windup - Kalman filter for sensor fusion - Betaflight rates compatible - Acro/Angle/Horizon modes Telemetry \u0026amp; OSD Real-time - MSP protocol for configuration - Integrated OSD via MAX7456 - Bidirectional CRSF telemetry - Betaflight-compatible Blackbox logs 💻 Embedded Rust Code # Real-time main loop with RTIC # #[rtic::app(device = stm32f4xx_hal::pac, peripherals = true)] mod app { use num_traits::Float; #[shared] struct Shared { pid_controllers: PidBank, motor_outputs: [u16; 4], flight_mode: FlightMode, } #[local] struct Local { imu: Mpu6000\u0026lt;SpiDma\u0026gt;, motors: DshotMotors, receiver: ElrsReceiver, } #[init] fn init(ctx: init::Context) -\u0026gt; (Shared, Local, init::Monotonics) { // Clock configuration at 168MHz let clocks = setup_clocks(ctx.device.RCC); // Init SPI DMA for IMU let imu = Mpu6000::new_with_dma( spi1, dma_streams, cs_pin ).set_sample_rate(8000); // 8kHz gyro // Spawn main task gyro_loop::spawn().unwrap(); // ... initialization } #[task( local = [imu, motors], shared = [pid_controllers, motor_outputs], priority = 3 )] fn gyro_loop(mut ctx: gyro_loop::Context) { // DMA read of gyro data (non-blocking) let gyro_data = ctx.local.imu.read_gyro_dma(); ctx.shared.pid_controllers.lock(|pid| { ctx.shared.motor_outputs.lock(|motors| { // PID calculation at 1000Hz let pid_output = pid.update(gyro_data, dt); // Mixer for motor output *motors = mixer::calculate(pid_output); }); }); // Update DShot at 1000Hz ctx.local.motors.send_dshot(*motors); // Re-schedule to maintain 1000Hz gyro_loop::spawn_after(1.millis()).unwrap(); } } PID implementation with anti-windup # pub struct PidController { kp: f32, ki: f32, kd: f32, integral: f32, prev_error: f32, integral_limit: f32, output_limit: f32, } impl PidController { #[inline(always)] pub fn update(\u0026amp;mut self, setpoint: f32, measurement: f32, dt: f32) -\u0026gt; f32 { let error = setpoint - measurement; // Proportional let p_term = self.kp * error; // Integral with anti-windup self.integral += error * dt; self.integral = self.integral.clamp( -self.integral_limit, self.integral_limit ); let i_term = self.ki * self.integral; // Derivative with filter let derivative = (error - self.prev_error) / dt; let d_term = self.kd * derivative; self.prev_error = error; // Output with saturation (p_term + i_term + d_term).clamp( -self.output_limit, self.output_limit ) } } 🛠️ Complete Tech Stack # Category Technologies Firmware Rust no_std, RTIC, cortex-m, nb Hardware STM32F4, MPU6000, MAX7456, ESP32 (WiFi) Protocols DShot, ELRS/CRSF, MSP, MAVLink Tools probe-rs, cargo-embed, OpenOCD, defmt Testing Hardware-in-the-loop, SITL simulation 📊 Performance \u0026amp; Benchmarks # 🚁 Advanced Features # GPS RTH - Automatic Return to Home Failsafe - Configurable multi-level Auto-tune - PID calibration via ML WiFi Config - Web interface via ESP32 HD Blackbox - 32MB high-resolution logs 🏆 Real-World Testing # 500+ flight hours without firmware crashes Successfully used in racing competitions Stick-to-motor latency \u0026lt; 2ms Compatible with 95% of market frames 🎓 Skills Developed # Embedded Rust: no_std, RTIC, HAL development Real-time: Interrupts, DMA, scheduling Control theory: PID, filters, stabilization Drone protocols: DShot, ELRS, MSP Hardware: PCB design, SMD soldering 🔗 Project Resources # Source code \u0026 PCB designs Documentation \u0026 Build Guide Flight videos \u0026 tutorials Open Hardware \u0026amp; Software: FlightCore is 100% open source. Join the community and contribute to the future of FPV! ","date":"March 5, 2024","externalUrl":null,"permalink":"/en/projets/drone-flight-controller/","section":"Projects","summary":"Open source flight controller for FPV racing drones, developed in embedded Rust with real-time performance and maximum safety.","title":"FlightCore - Open Source Flight Controller","type":"projets"},{"content":"","date":"March 5, 2024","externalUrl":null,"permalink":"/en/tags/iot/","section":"Tags","summary":"","title":"IoT","type":"tags"},{"content":"","date":"March 5, 2024","externalUrl":null,"permalink":"/en/tags/pid/","section":"Tags","summary":"","title":"PID","type":"tags"},{"content":"","date":"March 5, 2024","externalUrl":null,"permalink":"/en/tags/rtos/","section":"Tags","summary":"","title":"RTOS","type":"tags"},{"content":"","date":"March 5, 2024","externalUrl":null,"permalink":"/en/tags/rust/","section":"Tags","summary":"","title":"Rust","type":"tags"},{"content":"","date":"January 15, 2024","externalUrl":null,"permalink":"/en/tags/docker/","section":"Tags","summary":"","title":"Docker","type":"tags"},{"content":"","date":"January 15, 2024","externalUrl":null,"permalink":"/en/tags/go/","section":"Tags","summary":"","title":"Go","type":"tags"},{"content":" Distributed monitoring system developed in Go, capable of handling millions of metrics per second with minimal latency. 🚀 100K+ metrics/second 🎯 Project Context # Faced with the limitations of existing monitoring solutions, I developed GoMetrics, a distributed monitoring system fully leveraging Go\u0026rsquo;s power to deliver exceptional performance and horizontal scalability.\nPerformance: Processing 100,000+ metrics per second with P99 latency \u0026lt; 10ms 🏗️ Technical Architecture # Distributed Collectors Go \u0026#43; gRPC - Collection agents written in pure Go - Communication via gRPC to minimize latency - Lock-free circular buffer for metrics - Intelligent backpressure management Optimized Storage TimescaleDB - TimescaleDB for time series - Redis for cache and real-time alerts - Automatic compression of historical data - Intelligent partitioning by time bucket Real-Time Visualization WebSockets - React dashboard with real-time charts - WebSockets for instant updates - Server-side aggregation to reduce network load - Export to Grafana via Prometheus API Intelligent Alerting ML - Anomaly detection via machine learning - Configurable alert rules in YAML - Slack, PagerDuty, email integration - Automatic incident correlation 💻 Code \u0026amp; Implementation # High-performance collector in Go # // Example of optimized collector with worker pool type MetricCollector struct { workers int queue chan *Metric buffer *ring.Buffer rpcClient pb.MetricsServiceClient } func (c *MetricCollector) Collect(ctx context.Context) { // Goroutine pool for parallel processing for i := 0; i \u0026lt; c.workers; i++ { go c.worker(ctx) } // Batch processing to optimize sends ticker := time.NewTicker(100 * time.Millisecond) batch := make([]*pb.Metric, 0, 1000) for { select { case metric := \u0026lt;-c.queue: batch = append(batch, metric) if len(batch) \u0026gt;= 1000 { c.sendBatch(ctx, batch) batch = batch[:0] } case \u0026lt;-ticker.C: if len(batch) \u0026gt; 0 { c.sendBatch(ctx, batch) batch = batch[:0] } } } } Concurrent processing pipeline # Goroutines - 10K+ concurrent goroutines Channels - Lock-free communication Context - Elegant timeout management Sync.Pool - Allocation reuse 🛠️ Tech Stack # Category Technologies Backend Go 1.21, gRPC, Protocol Buffers, Gin Storage TimescaleDB, Redis Cluster, S3 (archives) Infrastructure Kubernetes, Helm, Prometheus Operator Monitoring Grafana, Jaeger (tracing), ELK Stack CI/CD GitHub Actions, ArgoCD, Trivy (security) 📊 Results \u0026amp; Performance # 🔧 Key Optimizations # Zero-allocation in hot path using sync.Pool Lock-free algorithms for critical buffers Intelligent batch processing with adaptive sizing Memory-mapped files for persistent caches SIMD optimizations for metric aggregation 🎓 Technical Learnings # This project allowed me to deepen:\nAdvanced concurrent programming in Go System-level performance optimization Resilient distributed architecture design Observability and debugging of complex systems High-frequency data management 🔗 Resources # Source code on GitHub Live demo (dashboard) Interested in high-performance monitoring? Contact me to discuss your observability needs! ","date":"January 15, 2024","externalUrl":null,"permalink":"/en/projets/microservice-monitoring/","section":"Projects","summary":"Distributed monitoring system developed in Go, capable of handling millions of metrics per second with minimal latency.","title":"GoMetrics - Distributed Monitoring System","type":"projets"},{"content":"","date":"January 15, 2024","externalUrl":null,"permalink":"/en/tags/grafana/","section":"Tags","summary":"","title":"Grafana","type":"tags"},{"content":"","date":"January 15, 2024","externalUrl":null,"permalink":"/en/tags/grpc/","section":"Tags","summary":"","title":"GRPC","type":"tags"},{"content":"","date":"January 15, 2024","externalUrl":null,"permalink":"/en/tags/kubernetes/","section":"Tags","summary":"","title":"Kubernetes","type":"tags"},{"content":"","date":"January 15, 2024","externalUrl":null,"permalink":"/en/tags/prometheus/","section":"Tags","summary":"","title":"Prometheus","type":"tags"},{"content":"","date":"January 15, 2024","externalUrl":null,"permalink":"/en/tags/redis/","section":"Tags","summary":"","title":"Redis","type":"tags"},{"content":"","date":"November 10, 2023","externalUrl":null,"permalink":"/en/tags/ecs/","section":"Tags","summary":"","title":"ECS","type":"tags"},{"content":"","date":"November 10, 2023","externalUrl":null,"permalink":"/en/tags/game-development/","section":"Tags","summary":"","title":"Game Development","type":"tags"},{"content":" Modern 2D game engine written in Rust, leveraging the language\u0026rsquo;s memory safety and performance to create smooth gaming experiences on the web. ⚡ Stable 60 FPS with 10K+ entities 🎮 Project Overview # PixEngine is a 2D game engine I developed entirely in Rust, with the goal of demonstrating that it\u0026rsquo;s possible to create performant web games without sacrificing memory safety. The engine compiles to WebAssembly for native execution in the browser.\nZero crashes: Thanks to Rust, no memory-related crashes since the project began 🏗️ Architecture \u0026amp; Design # Entity Component System (ECS) Architecture - Pure ECS pattern with specs as foundation - Data/logic separation for cache efficiency - Automatically parallelizable systems - Hot-reload of components in development Optimized WebGL Renderer Performance - Automatic batching of draw calls - Instanced rendering for similar sprites - Texture atlas generated at compile time - Compiled and optimized GLSL shaders Memory Safety by Design Rust - No dynamic allocation in the game loop - Strict ownership to avoid data races - Explicit lifetimes for resources - Zero-cost abstractions everywhere WebAssembly First Web Native - Binary size \u003c 200KB (gzipped) - Minimal and typed JavaScript interop - Streaming compilation support - SharedArrayBuffer for multithreading 💻 Technical Implementation # ECS System in Rust # // Component definition with derive macros #[derive(Component, Debug)] struct Position { x: f32, y: f32, } #[derive(Component, Debug)] struct Velocity { dx: f32, dy: f32, } // Parallelizable movement system struct MovementSystem; impl\u0026lt;\u0026#39;a\u0026gt; System\u0026lt;\u0026#39;a\u0026gt; for MovementSystem { type SystemData = ( WriteStorage\u0026lt;\u0026#39;a, Position\u0026gt;, ReadStorage\u0026lt;\u0026#39;a, Velocity\u0026gt;, Read\u0026lt;\u0026#39;a, DeltaTime\u0026gt;, ); fn run(\u0026amp;mut self, (mut pos, vel, dt): Self::SystemData) { // Parallel iteration with Rayon (\u0026amp;mut pos, \u0026amp;vel) .par_join() .for_each(|(pos, vel)| { pos.x += vel.dx * dt.0; pos.y += vel.dy * dt.0; }); } } WebGL Renderer with zero-copy # // Vertex buffer with shared memory pub struct SpriteRenderer { vao: WebGlVertexArrayObject, instances: Vec\u0026lt;InstanceData\u0026gt;, buffer: Arc\u0026lt;SharedArrayBuffer\u0026gt;, } impl SpriteRenderer { pub fn render(\u0026amp;mut self, sprites: \u0026amp;[Sprite]) { // Update instances without allocation self.instances.clear(); self.instances.extend( sprites.iter().map(|s| s.to_instance_data()) ); // Direct upload to GPU unsafe { let data = std::slice::from_raw_parts( self.instances.as_ptr() as *const u8, self.instances.len() * std::mem::size_of::\u0026lt;InstanceData\u0026gt;() ); self.buffer.update_data(0, data); } // Single draw call for all sprites self.context.draw_arrays_instanced( WebGl2::TRIANGLES, 0, 6, self.instances.len() as i32 ); } } 🛠️ Technologies \u0026amp; Tools # Category Technologies Core Rust 1.75, wasm-bindgen, web-sys Graphics WebGL 2.0, glam (math), image ECS specs, rayon (parallelism) Build wasm-pack, webpack, wasm-opt Dev Tools cargo-watch, wasm-bindgen-test 📊 Benchmarks \u0026amp; Performance # 🎯 Engine Features # Sprite rendering - Batching, animations, atlases Audio - Web Audio API, spatial sound Input - Keyboard, mouse, gamepad, touch Physics - Rapier2D (Rust) integration Networking - WebRTC for multiplayer Scripting - Ergonomic Rust API 🚀 Demo Game # I developed a demonstration game \u0026ldquo;Space Defenders\u0026rdquo; using PixEngine:\n1000+ simultaneous enemy ships Particle system (10K+ particles) Pixel-perfect collisions Online leaderboard with Rust backend 🎓 Skills Acquired # This project allowed me to master:\nAdvanced Rust: unsafe code, FFI, procedural macros WebAssembly: size optimization, JS interop ECS Architecture: data-oriented design GPU Optimization: batching, instancing, shaders Memory Management: zero-allocation patterns 🔗 Project Links # Source code (MIT License) Playable online demo Complete documentation Want to create your own web game? PixEngine is open source and ready to use. Contact me for support! ","date":"November 10, 2023","externalUrl":null,"permalink":"/en/projets/rust-game-engine/","section":"Projects","summary":"Modern 2D game engine written in Rust, leveraging the language\u0026rsquo;s memory safety and performance to create smooth gaming experiences on the web.","title":"PixEngine - 2D Game Engine in Rust","type":"projets"},{"content":"","date":"November 10, 2023","externalUrl":null,"permalink":"/en/tags/wasm/","section":"Tags","summary":"","title":"WASM","type":"tags"},{"content":"","date":"November 10, 2023","externalUrl":null,"permalink":"/en/tags/webassembly/","section":"Tags","summary":"","title":"WebAssembly","type":"tags"},{"content":"","date":"November 10, 2023","externalUrl":null,"permalink":"/en/tags/webgl/","section":"Tags","summary":"","title":"WebGL","type":"tags"},{"content":"","date":"May 20, 2023","externalUrl":null,"permalink":"/en/categories/academic-projects/","section":"Categories","summary":"","title":"Academic Projects","type":"categories"},{"content":"","date":"May 20, 2023","externalUrl":null,"permalink":"/en/series/but-computer-science/","section":"Series","summary":"","title":"BUT Computer Science","type":"series"},{"content":"","date":"20 May 2023","externalUrl":null,"permalink":"/series/but-informatique/","section":"Séries","summary":"","title":"BUT Informatique","type":"series"},{"content":"","date":"May 20, 2023","externalUrl":null,"permalink":"/en/tags/chart.js/","section":"Tags","summary":"","title":"Chart.js","type":"tags"},{"content":"","date":"20 May 2023","externalUrl":null,"permalink":"/categories/projets-acad%C3%A9miques/","section":"Catégories","summary":"","title":"Projets Académiques","type":"categories"},{"content":"","date":"May 20, 2023","externalUrl":null,"permalink":"/en/tags/react.js/","section":"Tags","summary":"","title":"React.js","type":"tags"},{"content":"","date":"May 20, 2023","externalUrl":null,"permalink":"/en/tags/redux/","section":"Tags","summary":"","title":"Redux","type":"tags"},{"content":"","date":"May 20, 2023","externalUrl":null,"permalink":"/en/tags/socket.io/","section":"Tags","summary":"","title":"Socket.io","type":"tags"},{"content":" Complete task management web application with advanced collaborative features, developed as part of an ambitious university project. 🏆 Final grade: 17/20 🎯 Project Overview # TaskFlow was born from a simple observation: existing project management tools are often too complex for small teams. I designed this application to offer a smooth user experience while providing powerful features.\nHighlight: The application was adopted as a reference tool by the computer science department for subsequent student projects. 🚀 Main Features # Dynamic Kanban Boards Core Feature - Intuitive Drag \u0026 Drop between columns - Unlimited creation of custom boards - Configurable columns (To Do, In Progress, In Review, Done) - Automatic position saving Real-Time Collaboration Innovation - WebSockets for instant updates - Collaborator presence indicators - Comments and mentions (@user) - Complete modification history Analytics \u0026amp; Reporting Data-Driven - Progress charts (Chart.js) - Average completion time per task - Workload distribution - PDF report export Notification System Engagement - Push notifications for deadlines - Customizable reminders - Daily email digest - Calendar integration (iCal) 💻 Technical Architecture # Frontend - React.js \u0026amp; Redux # // Example of React component with custom hooks const TaskCard = ({ task, onUpdate }) =\u0026gt; { const [isDragging, setIsDragging] = useState(false); const { user } = useAuth(); const dispatch = useDispatch(); // Optimistic update handling const handleUpdate = useCallback(async (updates) =\u0026gt; { dispatch(updateTaskOptimistic(task.id, updates)); try { await api.updateTask(task.id, updates); } catch (error) { dispatch(revertTaskUpdate(task.id)); } }, [task.id, dispatch]); } Backend - Node.js \u0026amp; Express # Secure JWT Authentication MongoDB with complex aggregations Socket.io for real-time RESTful API documented with Swagger 🛠️ Complete Tech Stack # Category Technologies Frontend React.js 18, Redux Toolkit, React DnD, Tailwind CSS Backend Node.js, Express.js, Socket.io, Joi (validation) Database MongoDB, Mongoose ODM, Redis (cache) DevOps Docker, GitHub Actions, Heroku, Jest \u0026amp; Cypress Security JWT, bcrypt, Helmet.js, rate limiting 📊 Results and Impact # 🎓 Key Learnings # This project allowed me to:\nMaster modern Full-Stack architecture with React and Node.js Implement complex real-time features with WebSockets Optimize performance (lazy loading, memoization, MongoDB indexing) Manage a large-scale project from design to deployment Collaborate effectively with a team of 4 developers 🔗 Links and Resources # View code on GitHub Live demo Want to know more? Contact me for a complete demonstration of the application and its advanced features! ","date":"May 20, 2023","externalUrl":null,"permalink":"/en/projets/application-gestion-taches/","section":"Projects","summary":"Complete task management web application with advanced collaborative features, developed as part of an ambitious university project.","title":"TaskFlow - Collaborative Task Management Application","type":"projets"},{"content":"","date":"10 September 2022","externalUrl":null,"permalink":"/series/d%C3%A9veloppement-discord/","section":"Séries","summary":"","title":"Développement Discord","type":"series"},{"content":" Discord Bot for Community Management # Development of a Discord bot to facilitate the management of a gaming community.\nDescription # Automated moderation system Custom commands Integration with game APIs Levels and rewards system Technologies Used # JavaScript: Main programming language Node.js: Runtime environment Discord.js: API for interacting with Discord MongoDB: Storage for user data and configurations Key Features # Automatic filtering of inappropriate messages Administration commands for moderators Integration with game APIs (real-time statistics) Activity-based leveling system Automated community event creation Results # Bot used by a community of over 500 members Significant reduction in workload for moderators User-friendly interface for non-technical users Improved community engagement ","date":"September 10, 2022","externalUrl":null,"permalink":"/en/projets/bot-discord-communaute/","section":"Projects","summary":"Discord Bot for Community Management # Development of a Discord bot to facilitate the management of a gaming community.","title":"Discord Bot for Community Management","type":"projets"},{"content":"","date":"September 10, 2022","externalUrl":null,"permalink":"/en/series/discord-development/","section":"Series","summary":"","title":"Discord Development","type":"series"},{"content":"","date":"September 10, 2022","externalUrl":null,"permalink":"/en/tags/discord.js/","section":"Tags","summary":"","title":"Discord.js","type":"tags"},{"content":"","date":"September 10, 2022","externalUrl":null,"permalink":"/en/tags/javascript/","section":"Tags","summary":"","title":"JavaScript","type":"tags"},{"content":"","date":"15 June 2021","externalUrl":null,"permalink":"/tags/capteurs-environnementaux/","section":"Tags","summary":"","title":"Capteurs Environnementaux","type":"tags"},{"content":" Environmental Monitoring System # Final project for the STI2D baccalaureate, creation of an air quality monitoring system.\nDescription # Air quality sensors (particles, CO2, humidity) Microcontroller for data collection and processing Web interface to visualize data in real time Automatic alert system Technologies Used # Arduino: Microcontroller programming Environmental sensors: Air quality measurement HTML/CSS/JavaScript: Web user interface PHP: Backend for data processing and storage Results # Functional system deployed in the school Real-time dashboard accessible by staff Automatic alerts when air quality thresholds are exceeded Final grade: 18/20 for the project ","date":"June 15, 2021","externalUrl":null,"permalink":"/en/projets/systeme-surveillance-environnementale/","section":"Projects","summary":"Environmental Monitoring System # Final project for the STI2D baccalaureate, creation of an air quality monitoring system.","title":"Environmental Monitoring System","type":"projets"},{"content":"","date":"June 15, 2021","externalUrl":null,"permalink":"/en/tags/environmental-sensors/","section":"Tags","summary":"","title":"Environmental Sensors","type":"tags"},{"content":"","date":"June 15, 2021","externalUrl":null,"permalink":"/en/tags/html/css/","section":"Tags","summary":"","title":"HTML/CSS","type":"tags"},{"content":"","date":"June 15, 2021","externalUrl":null,"permalink":"/en/tags/html/css/javascript/","section":"Tags","summary":"","title":"HTML/CSS/JavaScript","type":"tags"},{"content":"","date":"June 15, 2021","externalUrl":null,"permalink":"/en/tags/php/","section":"Tags","summary":"","title":"PHP","type":"tags"},{"content":"","date":"15 June 2021","externalUrl":null,"permalink":"/categories/projets-scolaires/","section":"Catégories","summary":"","title":"Projets Scolaires","type":"categories"},{"content":"","date":"June 15, 2021","externalUrl":null,"permalink":"/en/categories/school-projects/","section":"Categories","summary":"","title":"School Projects","type":"categories"},{"content":"","date":"June 15, 2021","externalUrl":null,"permalink":"/en/series/sti2d/","section":"Series","summary":"","title":"STI2D","type":"series"},{"content":" Athletics Club Website # Design and development of the official website for the Saint-Gély-du-Fesc athletics club.\nDescription # Club and activities presentation Event registration system Competition photo gallery News blog Technologies Used # WordPress HTML/CSS PHP JavaScript Link # www.saint-gely-athletisme.fr\nAchievements # Site architecture design WordPress theme customization Mobile and tablet optimization Administrator training for content management ","date":"September 15, 2020","externalUrl":null,"permalink":"/en/projets/site-athletisme/","section":"Projects","summary":"Athletics Club Website # Design and development of the official website for the Saint-Gély-du-Fesc athletics club.","title":"Athletics Club Website","type":"projets"},{"content":"","date":"September 15, 2020","externalUrl":null,"permalink":"/en/tags/wordpress/","section":"Tags","summary":"","title":"WordPress","type":"tags"},{"content":" Passionate developer, I create web experiences that make a difference. 🎯 My Journey # Student in Computer Science at IUT Montpellier, I discovered my passion for web development from my very first programming courses. This training has allowed me to acquire solid foundations in algorithms, system design, and application development.\nCurrent education: 3rd year of Computer Science - Application Development Track Beyond the academic framework, I constantly develop my skills through personal projects and technical challenges. This self-taught approach allows me to stay at the forefront of modern web technologies.\n💻 My Development Philosophy # User-Centered Priority #1 Every feature, every interface is designed to offer the best possible experience. I firmly believe that a good developer must first understand the real needs of users. Quality Code Excellence I apply best practices: clean code, automated tests, clear documentation. Maintainable code today means time saved tomorrow. Optimal Performance Speed Resource optimization, lazy loading, strategic caching... I ensure that every application is fast and responsive, even on limited connections. Constant Innovation Creativity Active technology watch, exploration of new approaches, questioning existing solutions. Innovation guides each of my projects. 🚁 My Passions # FPV Drones # FPV drone pilot and builder for 3 years, this passion has taught me:\nTechnical precision in component assembly Problem solving complex issues in real-time The importance of perseverance in the face of challenges Creativity in capturing unique images Emerging Technologies # Artificial Intelligence: Exploring AI possibilities in web development Web3 \u0026amp; Blockchain: Understanding decentralized technologies IoT: Integrating connected objects into web applications Cybersecurity: Securing applications and protecting data View my projects Download my resume Contact me directly ","externalUrl":null,"permalink":"/en/apropos/","section":"Léon Fievet - Full-Stack Developer \u0026 Software Engineer","summary":"Passionate developer, I create web experiences that make a difference.","title":"About Me","type":"page"},{"content":" Contact Me # I am open to professional opportunities, project collaborations, or simply exchanging ideas about web development and computer science.\nContact Information # Email: fievet.leon@free.fr leon.fievet@etu.umontpellier.fr Phone: 07 81 87 39 33 Social Media and Profiles # LinkedIn: linkedin.com/in/leonfievet GitHub: github.com/pixnop Website: pixnop.github.io Location # I am based in Montpellier, France, but I am open to remote work opportunities.\nAvailability # Feel free to contact me with any questions or proposals. I aim to respond within 24-48 hours.\nFor professional inquiries, please prefer contact via email or LinkedIn. 📄 Resume # You can view my complete resume for more details about my background and skills.\nView my complete resume Download resume (PDF) ","externalUrl":null,"permalink":"/en/contact/","section":"Léon Fievet - Full-Stack Developer \u0026 Software Engineer","summary":"Contact Me # I am open to professional opportunities, project collaborations, or simply exchanging ideas about web development and computer science.","title":"Contact","type":"page"},{"content":" Education # Bachelor\u0026rsquo;s Degree in Computer Science # IUT Montpellier-Sète, University of Montpellier | 2021 - 2024 | Work-study at ECO-MED\nComputer science education with specialization in application development and application/data integration.\nAcquired Skills:\nWeb and mobile application development Object-oriented programming Database design and administration Information systems analysis and design IT project management Agile methodologies (Scrum) DevOps and continuous integration Team development and Git usage Notable Academic Projects:\nDevelopment of a task management application with React and Node.js Creation of a RESTful API with authentication Final year project: Environmental management application for ECO-MED Technological Baccalaureate in STI2D # Pierre Rouge High School, Montpellier | 2019 - 2021 | With Honors\nSpecialization in SIN (Information Systems and Digital)\nAcquired Skills:\nProgramming fundamentals Electronic system design Knowledge of materials architecture Collaborative technical project Main Project:\nDesign and development of a connected environmental monitoring system Additional Certifications # BNSSA (National Water Safety and Rescue Certificate) # French Federation of Lifesaving and First Aid | 2022\nProfessional certification allowing to work as a lifeguard.\nPSE1 (Team First Aid Level 1) # Civil Protection | 2022 - 2023\nTraining in team first aid and emergency situations.\nContinuing Education # Online Certifications # Introduction to React (Codecademy) Advanced JavaScript (Udemy) Full Stack Development with MERN (MongoDB, Express, React, Node.js) Languages # French: Native language English: B2 level (advanced independent user) Spanish: Basic knowledge ","externalUrl":null,"permalink":"/en/formation/","section":"Léon Fievet - Full-Stack Developer \u0026 Software Engineer","summary":"Education # Bachelor\u0026rsquo;s Degree in Computer Science # IUT Montpellier-Sète, University of Montpellier | 2021 - 2024 | Work-study at ECO-MED","title":"Education","type":"page"},{"content":" This page presents my learnings for the three competencies that stop at level 2 in the RACDV track of the Computer Science BUT. 🎯 Competency 2: Optimize Applications # Level 1: Understand and Build Algorithms # CE2.01 - By formalizing and modeling complex situations # Achieved learnings:\nMastery of UML modeling (class, sequence, use case diagrams) Use of formal methods to represent complex problems Application of design patterns (Singleton, Factory, Observer) Evidence:\nUML diagram for designing a library management application Implementation of MVC pattern in the task management project Graded assignment on modeling a reservation system (grade: 16/20) Reflection: I developed my ability to abstract complex problems using different formalisms. The task management project particularly allowed me to practice object-oriented modeling with a complete MVC architecture. I learned to identify entities, their relationships, and represent them in a clear and maintainable way.\nCE2.02 - By cataloging common algorithms and data structures # Achieved learnings:\nMastery of fundamental data structures (lists, trees, graphs, hash tables) Knowledge of sorting algorithms (quicksort, mergesort, heapsort) and searching Understanding of algorithmic complexity (Big O notation) Evidence:\nImplementation of an AVL tree in Java with automatic rebalancing Lab comparing performance of different sorting algorithms Use of Dijkstra for route calculation in the carpool app Reflection: Through various projects and labs, I built a solid algorithmic \u0026ldquo;toolbox\u0026rdquo;. I now know how to choose the appropriate data structure based on context (HashMap for O(1) access, TreeMap for ordered data, etc.).\nLevel 2: Select Appropriate Algorithms to Solve a Given Problem # CE2.01 - By formalizing and modeling complex situations # Achieved learnings:\nIn-depth analysis of constraints before algorithmic choice Modeling optimization problems (dynamic programming, greedy algorithms) Use of algorithmic design methods (divide and conquer, backtracking) Evidence:\nSAE optimizing the matching system for the carpool application Personal project of optimized scheduling algorithm Participation in programming competition (ranking: top 15%) Reflection: I learned not to rush to the first solution. For the carpool application, I first modeled the problem as a weighted graph before choosing a variant of the maximum matching algorithm. This methodical approach allowed me to reduce complexity from O(n³) to O(n²log n).\nCE2.02 - By cataloging common algorithms and data structures # Achieved learnings:\nAdvanced use of specialized data structures (Trie, Bloom filter, Skip list) Implementation of complex graph algorithms (Bellman-Ford, Floyd-Warshall, A*) Mastery of probabilistic and approximation algorithms Evidence:\nImplementation of a Trie for autocompletion in the task manager Use of A* algorithm for navigation in a game prototype Benchmark comparing Bloom filter vs HashSet for duplicate detection Reflection: My algorithmic repertoire has significantly expanded. I no longer settle for basic structures but seek the most suitable solutions. For example, using a Bloom filter in the Discord bot reduced memory usage by 90% for spam detection.\nCE2.03 - By relying on reasoning patterns # Achieved learnings:\nSystematic application of algorithmic patterns (two pointers, sliding window) Reasoning by recurrence and induction Proof of algorithm correctness Evidence:\nAnalysis document of my modified merge sort algorithm\u0026rsquo;s correctness Solving algorithmic problems with different approaches Presentation on \u0026ldquo;sliding window\u0026rdquo; pattern to the class Reflection: I developed a methodical approach to solving algorithmic problems. I always start by identifying the underlying pattern (is it a sliding window problem? dynamic programming?). This method allowed me to efficiently solve 80% of the advanced algorithmic module problems.\nCE2.04 - By justifying choices and validating results # Achieved learnings:\nComparative analysis of solutions (time, space, readability) Performance testing and benchmarking Validation through unit tests and property tests Evidence:\nComparative analysis report of 3 algorithms for the recommendation system Unit test suite with 95% coverage for the sorting module Benchmark graphs showing performance evolution Reflection: I no longer settle for implementing a solution that \u0026ldquo;works\u0026rdquo;. For each important algorithmic choice, I document the alternatives considered, reasons for the final choice, and validate through tests. This rigor has prevented several performance issues in production.\n🖥️ Competency 3: Administer Complex Communicating Computer Systems # Level 1: Install and Configure a Workstation # CE3.01 - By securing the information system # Achieved learnings:\nFirewall and antivirus configuration User and permission management under Linux Implementation of basic security policies Evidence:\nAutomation script for secure Ubuntu configuration Documentation of a development workstation security guide Lab configuring iptables for a web server Reflection: I learned the importance of security from system installation. My installation script automates best practices: disabling SSH root, firewall configuration, fail2ban installation. This proactive approach has become systematic in all my projects.\nLevel 2: Deploy Services in a Network Architecture # CE3.01 - By securing the information system # Achieved learnings:\nVPN and SSH tunnel configuration SSL/TLS certificate setup with Let\u0026rsquo;s Encrypt API security with OAuth2 and JWT Evidence:\nNginx reverse proxy configuration with SSL Secure deployment of task manager API with JWT authentication Documentation of production server security procedures Reflection: Security has become a central concern in my deployments. For my projects, I implemented multi-layered secure architecture: mandatory HTTPS, JWT authentication with refresh tokens, rate limiting, and centralized logs. This experience prepared me for enterprise security requirements.\nCE3.02 - By offering optimal service quality # Achieved learnings:\nLoad balancer configuration (HAProxy, Nginx) Monitoring setup (Prometheus, Grafana) Network performance optimization Evidence:\nGrafana dashboard for real-time infrastructure monitoring Load balancing configuration with automatic health checks API response time analysis and optimization report Reflection: I learned to think beyond just \u0026ldquo;it works\u0026rdquo;. For the ECO-MED hub project, I set up comprehensive monitoring to detect problems before they impact users. Load balancing maintained 99.9% availability even during usage peaks.\nCE3.03 - By applying current standards and best practices # Achieved learnings:\nCompliance with ISO 27001 security standards Application of DevOps and Infrastructure as Code principles Documentation according to ITIL standards Evidence:\nInfrastructure as Code with Docker Compose and Kubernetes Runbooks for operational procedures GDPR compliance checklist for data storage Reflection: My professional experience exposed me to enterprise requirements. I had to learn to document rigorously, follow established procedures, and respect strict standards. This rigor, initially constraining, has become natural and helps me produce professional quality work.\nCE3.04 - By ensuring business continuity # Achieved learnings:\nAutomated backup implementation High availability configuration Disaster recovery plans (DRP) Evidence:\nIncremental backup system script with rotation Multi-zone deployment architecture for high availability Detailed DRP document for task manager infrastructure Reflection: Service continuity is critical. I implemented automatic backup systems for my projects (3-2-1 backup rule), database replication, and regularly tested restoration procedures. An incident on the Discord bot (data loss) made me aware of the importance of these preventive measures.\n🗄️ Competency 4: Manage Information Data # Level 1: Design and Implement a Database # CE4.01 - By respecting regulations # Achieved learnings:\nUnderstanding and applying GDPR Data anonymization and pseudonymization User consent management Evidence:\nGDPR management module for the carpool application Compliant privacy policy written GDPR compliance audit report for the task manager Reflection: GDPR transformed how I design databases. For the carpool application, I implemented from conception: minimization of collected data, retention periods, automated right to be forgotten. This \u0026ldquo;privacy by design\u0026rdquo; approach is now systematic in my projects.\nLevel 2: Optimize a Database # CE4.01 - By respecting privacy regulations # Achieved learnings:\nEncryption of sensitive data in database Audit trails and compliance logs Fine-grained access rights management Evidence:\nImplementation of AES-256 encryption for personal data Architecture with PII data separation in dedicated database Test scenarios for GDPR compliance Reflection: I deepened my knowledge of data protection. For the ECO-MED hub, I implemented encryption at rest and in transit, immutable audit logs, and granular permission management. These measures ensure compliance while maintaining performance.\nCE4.02 - By respecting economic, societal and ecological stakes # Achieved learnings:\nQuery optimization to reduce consumption Intelligent archiving of old data Green IT and eco-design Evidence:\nBenchmark showing 70% CPU time reduction through query optimization Partitioning strategy to minimize disk space Report on data infrastructure environmental impact Reflection: I became aware of the environmental impact of data storage. For my projects, I implemented a progressive archiving strategy: hot data on SSD, warm on HDD, cold in object storage. This approach reduced costs by 60% and carbon footprint by 40%.\nCE4.03 - By relying on mathematical foundations # Achieved learnings:\nRelational algebra and query optimization Statistics for performance analysis Set theory applied to databases Evidence:\nUsing relational algebra to optimize complex joins Implementation of recommendation system based on cosine similarity Database sizing calculations based on statistical models Reflection: Mathematics is essential for optimizing databases. I used relational algebra to rewrite complex queries, going from 30s to 0.5s execution time. Understanding B-tree indexes and their logarithmic complexity guides my indexing choices.\nCE4.04 - By ensuring consistency and quality # Achieved learnings:\nAdvanced integrity constraints ACID transactions and isolation levels Automated consistency tests Evidence:\nTriggers and stored procedures to maintain consistency Data integrity test suite Monitoring with automatic alerts on detected inconsistencies Reflection: Data quality is crucial. I implemented multi-level validation mechanisms for each project: database constraints, application validation, and periodic consistency tests. This \u0026ldquo;defense in depth\u0026rdquo; approach maintained 99.99% integrity on critical data.\nConclusion # These three competencies allowed me to develop a comprehensive approach to software development:\nOptimization: I can choose and implement the most suitable algorithms Administration: I can deploy and maintain complex infrastructures Data Management: I design performant and compliant data systems This technical versatility, combined with my practical experience, ideally prepares me for continuing my journey in application development.\nDiscover my projects View my technical skills ","externalUrl":null,"permalink":"/en/portfolio-apprentissage/","section":"Léon Fievet - Full-Stack Developer \u0026 Software Engineer","summary":"This page presents my learnings for the three competencies that stop at level 2 in the RACDV track of the Computer Science BUT.","title":"Learning Portfolio - BUT 2","type":"page"},{"content":" Professional Experience # FullStack Developer # ECO-MED Montpellier | July - August 2024\nAs a fullstack developer, I contributed to the modernization of the company\u0026rsquo;s digital tools:\nDevelopment of a centralized application hub to improve productivity Design and implementation of business applications: Internal carpooling platform Weather monitoring system for field teams Automated document generation tool Optimization of existing tools for better performance Application of agile methodologies and use of collaborative tools (Git) Close collaboration with business teams to define precise needs Technologies: JavaScript, Node.js, React, MongoDB, Express, Git\nSoftware Development Internship # ECO-MED Montpellier | April - June 2024 | 12 weeks\nFinal study internship at the environmental consulting firm ECO-MED, focused on:\nNeeds analysis and development of customized solutions Participation in the redesign of internal applications Learning professional work methods Integration and testing of new features Technologies: JavaScript, HTML/CSS, PHP, MySQL, Git\nLifeguard # Domaine des Mûriers Campground | Summer 2023\nPool surveillance and swimmer safety Organization of water activities Maintenance management of facilities Responsibility for compliance with safety standards Website Creation # Saint-Gély-du-Fesc Athletics Club | 2020\nDesign and development of the website www.saint-gely-athletisme.fr Independent work to meet the club\u0026rsquo;s needs Content management and site maintenance Training administrators in content management Technologies: WordPress, HTML/CSS, PHP\nKitchen Work # La Boucherie Restaurant | 2021\nMeal preparation under chef supervision Food stock management Compliance with HACCP hygiene standards Teamwork in a fast-paced environment ","externalUrl":null,"permalink":"/en/experience/","section":"Léon Fievet - Full-Stack Developer \u0026 Software Engineer","summary":"Professional Experience # FullStack Developer # ECO-MED Montpellier | July - August 2024","title":"Professional Experience","type":"page"},{"content":" My Resume Passionate Full-Stack Developer, specialized in Go, Rust and modern web technologies 📄 Format: PDF | Size: ~200 KB | Last updated: May 2025 ⬇️ Download Resume 🔍 Open in new tab 👁️ View preview below Resume Preview Display issue? If the PDF doesn\u0026rsquo;t display correctly, you can download it directly or open it in a new tab. ","externalUrl":null,"permalink":"/en/cv/","section":"Léon Fievet - Full-Stack Developer \u0026 Software Engineer","summary":"My Resume Passionate Full-Stack Developer, specialized in Go, Rust and modern web technologies 📄 Format: PDF | Size: ~200 KB | Last updated: May 2025 ⬇️ Download Resume 🔍 Open in new tab 👁️ View preview below Resume Preview Display issue?","title":"Resume","type":"page"},{"content":"","externalUrl":null,"permalink":"/en/skills/","section":"Skills","summary":"","title":"Skills","type":"skills"},{"content":" Passionate about cutting-edge technologies, I create performant and elegant solutions that make a difference. 🚀 Technical Expertise # Backend Development Scalable microservices architectures and high-performance APIs Go Rust Node.js gRPC GraphQL Frontend Development Modern interfaces and exceptional user experiences React Vue 3 TypeScript Next.js Tailwind DevOps \u0026 Cloud Modern infrastructure and continuous deployment Docker Kubernetes AWS CI/CD Terraform 💻 Languages \u0026amp; Proficiency # Go 95% Microservices • Concurrency • REST/gRPC APIs • Performance JavaScript/TypeScript 90% React • Vue • Node.js • Full-Stack • Modern ES6+ Rust 85% Systems Programming • WebAssembly • Memory Safety • Async Python 75% Scripts • Automation • APIs • Data Processing 🛠️ Complete Tech Stack # ⚛️ React Ecosystem Next.js, Redux, React Query, Styled Components 🐳 Containerization Docker, Kubernetes, Docker Compose, Helm 🗄️ Databases PostgreSQL, MongoDB, Redis, Elasticsearch 🔧 Dev Tools Git, VS Code, Postman, Figma 📊 Monitoring Prometheus, Grafana, ELK Stack, Sentry 🔐 Security OAuth2, JWT, SSL/TLS, OWASP 🌟 What Sets Me Apart # Constant Innovation Mindset I stay on the lookout for the latest technologies and don't hesitate to explore new approaches to solve complex problems. Quality Code Standards Automated tests, clear documentation, clean architecture - I deliver maintainable and scalable code. Effective Collaboration Team Transparent communication, knowledge sharing and mentoring are integral parts of my professional approach. 🚁 Beyond the Code # FPV Pilot \u0026 Maker Passionate about FPV drones since 2019, I design and fly my own aircraft. This passion has taught me precision, patience and the importance of details - qualities I apply to every development project. 🛠️ Building Component assembly, soldering, configuration\n🎮 Flying FPV flight, freestyle, cinematic\n🎬 Creation Video editing, post-production, storytelling\nReady to bring your ideas to life? Discover my projects Let's discuss ","externalUrl":null,"permalink":"/en/competences/","section":"Léon Fievet - Full-Stack Developer \u0026 Software Engineer","summary":"Passionate about cutting-edge technologies, I create performant and elegant solutions that make a difference.","title":"Skills","type":"page"}]