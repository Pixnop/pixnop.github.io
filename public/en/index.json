


[{"content":"","date":"May 7, 2025","externalUrl":null,"permalink":"/en/tags/android/","section":"Tags","summary":"","title":"Android","type":"tags"},{"content":"Explore my projects by type and context.\n","date":"May 7, 2025","externalUrl":null,"permalink":"/en/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"7 May 2025","externalUrl":null,"permalink":"/series/d%C3%A9veloppement-mobile/","section":"Séries","summary":"","title":"Développement Mobile","type":"series"},{"content":"","date":"May 7, 2025","externalUrl":null,"permalink":"/en/tags/drone/","section":"Tags","summary":"","title":"Drone","type":"tags"},{"content":"","date":"May 7, 2025","externalUrl":null,"permalink":"/en/tags/kotlin/","section":"Tags","summary":"","title":"Kotlin","type":"tags"},{"content":" Hello, I\u0026rsquo;m Léon # Web developer and computer science student, I turn ideas into tangible digital solutions. Technical innovation drives me, both in creating web applications and building FPV drones, my favorite pastime.\nPrecision, creativity, and adaptability define my work. Every line of code I write aims to efficiently solve a real problem.\nExplore my projects, my background, or reach out to discuss your needs.\n","date":"May 7, 2025","externalUrl":null,"permalink":"/en/","section":"Léon Fievet - Web Developer","summary":"","title":"Léon Fievet - Web Developer","type":"page"},{"content":"","date":"May 7, 2025","externalUrl":null,"permalink":"/en/series/mobile-development/","section":"Series","summary":"","title":"Mobile Development","type":"series"},{"content":"","date":"May 7, 2025","externalUrl":null,"permalink":"/en/categories/personal-projects/","section":"Categories","summary":"","title":"Personal Projects","type":"categories"},{"content":"Discover below my various projects. You can also explore them by categories, technologies or series.\n","date":"May 7, 2025","externalUrl":null,"permalink":"/en/projets/","section":"Projects","summary":"","title":"Projects","type":"projets"},{"content":"","date":"7 May 2025","externalUrl":null,"permalink":"/categories/projets-personnels/","section":"Catégories","summary":"","title":"Projets Personnels","type":"categories"},{"content":"","date":"May 7, 2025","externalUrl":null,"permalink":"/en/tags/qr-code/","section":"Tags","summary":"","title":"QR Code","type":"tags"},{"content":"Explore my projects grouped by thematic series.\n","date":"May 7, 2025","externalUrl":null,"permalink":"/en/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":" SkyFuel - Drone Battery Management App # SkyFuel is an application dedicated to the efficient management of drone batteries, allowing pilots and operators to maintain their batteries in good condition, track their usage, and optimize their lifespan.\nPixnop/SkyFuel Kotlin 0 0 Main Features # 1. Battery Management # Battery Registration: Easily add new batteries to your inventory by specifying:\nBrand and model Number of cells Capacity (mAh) Type (LiPo, Li-ion, etc.) Purchase date Serial number Custom notes Main Dashboard: View all your batteries and their current status at a glance.\nFiltering and Search: Quickly find a specific battery by status, model, or other criteria.\n2. Status Tracking and Lifecycle Management # Multiple Statuses:\nCharged (ready to use) Discharged (requires charging) In storage (optimal charge level for long-term storage) Out of service (battery to be recycled) Voltage Recording: Document voltage levels at different stages to monitor battery health.\nCycle Counter: Automatic tracking of the number of charge/discharge cycles for each battery.\nUsage History: View the complete history of status changes and usage.\nLifespan Estimation: Calculation of remaining lifespan based on the number of cycles and performance.\n3. QR Code System # Unique QR Code Generation: Automatic creation of a QR code for each registered battery.\nEasy Printing: Export QR codes in formats optimized for printing on durable labels.\nQuick Access: Scanning a QR code instantly directs to the corresponding battery page.\nExpress Status Modification: Quickly change the status of a battery after scanning its QR code.\n4. Alert and Reminder System # Extended Charging Notifications: Alerts for batteries left charging for too long.\nExtended Discharge Alerts: Reminders for batteries left discharged, which can damage them.\nStorage Reminders: Notifications to prepare batteries for long-term storage if unused.\nEnd-of-Life Alerts: Notifications when a battery approaches its theoretical end of life based on cycles.\n5. Statistics and Reports # Analytical Dashboard: Visualize usage trends and the overall status of your battery fleet.\nHealth Reports: Generate detailed reports on the health and performance of each battery.\nUsage Statistics: Track which batteries are most used and which might be underutilized.\nData Export: Export your data in various formats (CSV, PDF) for external analysis.\nTechnical Specifications # Platforms: Application available on Android Storage: Local data storage with cloud synchronization option Performance: Low resource consumption, optimized for field use Connectivity: Offline mode available with automatic synchronization Benefits # Extend the lifespan of your batteries by following best charging and storage practices Avoid in-flight failures through better battery status management Reduce costs by maximizing the lifespan of each battery Save time with a quick identification system using QR codes Improve safety by identifying potentially defective batteries Target Audience # Professional drone pilots Drone video production companies Drone inspection services Aerial mapping companies Enthusiasts with multiple drones and batteries SkyFuel v1.0.0 is now available on GitHub: Pixnop/SkyFuel ","date":"May 7, 2025","externalUrl":null,"permalink":"/en/projets/skyfuel/","section":"Projects","summary":"","title":"SkyFuel - Drone Battery Management App","type":"projets"},{"content":"Discover the different technologies I\u0026rsquo;ve used in my projects.\n","date":"May 7, 2025","externalUrl":null,"permalink":"/en/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"April 15, 2024","externalUrl":null,"permalink":"/en/series/eco-med/","section":"Series","summary":"","title":"ECO-MED","type":"series"},{"content":" ECO-MED Application Hub # Development of a centralized platform for ECO-MED\u0026rsquo;s internal tools.\nDescription # Design and implementation of a centralized dashboard Integration of multiple business applications into a single interface Single Sign-On (SSO) authentication system User rights management Technologies Used # Frontend: React, Redux, Material UI Backend: Node.js, Express Database: MongoDB Authentication: JWT Results # Simplified tool access for employees Reduced training time for tools Consistent and modern interface ","date":"April 15, 2024","externalUrl":null,"permalink":"/en/projets/hub-eco-med/","section":"Projects","summary":"","title":"ECO-MED Application Hub","type":"projets"},{"content":"","date":"April 15, 2024","externalUrl":null,"permalink":"/en/tags/express/","section":"Tags","summary":"","title":"Express","type":"tags"},{"content":"","date":"April 15, 2024","externalUrl":null,"permalink":"/en/tags/jwt/","section":"Tags","summary":"","title":"JWT","type":"tags"},{"content":"","date":"April 15, 2024","externalUrl":null,"permalink":"/en/tags/mongodb/","section":"Tags","summary":"","title":"MongoDB","type":"tags"},{"content":"","date":"April 15, 2024","externalUrl":null,"permalink":"/en/tags/node.js/","section":"Tags","summary":"","title":"Node.js","type":"tags"},{"content":"","date":"April 15, 2024","externalUrl":null,"permalink":"/en/categories/professional-projects/","section":"Categories","summary":"","title":"Professional Projects","type":"categories"},{"content":"","date":"15 April 2024","externalUrl":null,"permalink":"/categories/projets-professionnels/","section":"Catégories","summary":"","title":"Projets Professionnels","type":"categories"},{"content":"","date":"April 15, 2024","externalUrl":null,"permalink":"/en/tags/react/","section":"Tags","summary":"","title":"React","type":"tags"},{"content":"","date":"April 1, 2024","externalUrl":null,"permalink":"/en/tags/google-maps-api/","section":"Tags","summary":"","title":"Google Maps API","type":"tags"},{"content":" Internal Carpooling Application # Design of a dedicated carpooling application for ECO-MED employees.\nDescription # Trip creation and search system Notification and reminder management Interactive map for visualizing routes CO2 savings statistics Technologies Used # React Native Node.js PostgreSQL Google Maps API Key Features # Intuitive and responsive interface Integrated messaging system between drivers and passengers Automatic carbon savings calculation Trip history ","date":"April 1, 2024","externalUrl":null,"permalink":"/en/projets/covoiturage-interne/","section":"Projects","summary":"","title":"Internal Carpooling Application","type":"projets"},{"content":"","date":"April 1, 2024","externalUrl":null,"permalink":"/en/tags/postgresql/","section":"Tags","summary":"","title":"PostgreSQL","type":"tags"},{"content":"","date":"April 1, 2024","externalUrl":null,"permalink":"/en/tags/react-native/","section":"Tags","summary":"","title":"React Native","type":"tags"},{"content":"","date":"5 March 2024","externalUrl":null,"permalink":"/tags/drones/","section":"Tags","summary":"","title":"Drones","type":"tags"},{"content":"","date":"5 March 2024","externalUrl":null,"permalink":"/tags/embedded/","section":"Tags","summary":"","title":"Embedded","type":"tags"},{"content":"","date":"5 March 2024","externalUrl":null,"permalink":"/tags/esp32/","section":"Tags","summary":"","title":"ESP32","type":"tags"},{"content":" Contrôleur de vol open source pour drones FPV racing, développé en Rust embarqué avec des performances temps réel et une sécurité maximale. 🚁 1000Hz loop rate | 💾 \u003c 128KB RAM 🎯 Genèse du projet # Passionné de drones FPV, j\u0026rsquo;ai voulu créer mon propre contrôleur de vol en combinant mes compétences en programmation système et ma connaissance du hardware. FlightCore est né de cette ambition : un firmware moderne, sûr et performant grâce à Rust.\nInnovation : Premier contrôleur de vol FPV production-ready écrit entièrement en Rust 🏗️ Architecture Hardware \u0026amp; Software # Hardware Platform STM32F4 - MCU STM32F405 @ 168MHz - Gyroscope/Accéléromètre MPU6000 via SPI - DShot600 pour les ESCs (protocole digital) - Récepteur ELRS compatible (900MHz/2.4GHz) - Flash externe pour blackbox logging Rust no_std Implementation Embedded - Framework RTIC pour le temps réel - Zero heap allocation - tout en statique - Interrupts prioritaires pour les capteurs - DMA pour les communications critiques Algorithmes de Stabilisation Control Theory - PID controllers avec anti-windup - Filtre Kalman pour fusion capteurs - Betaflight rates compatibles - Mode Acro/Angle/Horizon Télémétrie \u0026amp; OSD Real-time - Protocole MSP pour configuration - OSD intégré via MAX7456 - Telemetrie CRSF bidirectionnelle - Logs Blackbox compatibles Betaflight 💻 Code Rust Embarqué # Loop principal temps réel avec RTIC # #[rtic::app(device = stm32f4xx_hal::pac, peripherals = true)] mod app { use num_traits::Float; #[shared] struct Shared { pid_controllers: PidBank, motor_outputs: [u16; 4], flight_mode: FlightMode, } #[local] struct Local { imu: Mpu6000\u0026lt;SpiDma\u0026gt;, motors: DshotMotors, receiver: ElrsReceiver, } #[init] fn init(ctx: init::Context) -\u0026gt; (Shared, Local, init::Monotonics) { // Configuration des horloges à 168MHz let clocks = setup_clocks(ctx.device.RCC); // Init SPI DMA pour l\u0026#39;IMU let imu = Mpu6000::new_with_dma( spi1, dma_streams, cs_pin ).set_sample_rate(8000); // 8kHz gyro // Spawn de la tâche principale gyro_loop::spawn().unwrap(); // ... initialisation } #[task( local = [imu, motors], shared = [pid_controllers, motor_outputs], priority = 3 )] fn gyro_loop(mut ctx: gyro_loop::Context) { // Lecture DMA des données gyro (non-bloquant) let gyro_data = ctx.local.imu.read_gyro_dma(); ctx.shared.pid_controllers.lock(|pid| { ctx.shared.motor_outputs.lock(|motors| { // Calcul PID à 1000Hz let pid_output = pid.update(gyro_data, dt); // Mixer pour sortie moteurs *motors = mixer::calculate(pid_output); }); }); // Update DShot à 1000Hz ctx.local.motors.send_dshot(*motors); // Re-schedule pour maintenir 1000Hz gyro_loop::spawn_after(1.millis()).unwrap(); } } Implémentation PID avec anti-windup # pub struct PidController { kp: f32, ki: f32, kd: f32, integral: f32, prev_error: f32, integral_limit: f32, output_limit: f32, } impl PidController { #[inline(always)] pub fn update(\u0026amp;mut self, setpoint: f32, measurement: f32, dt: f32) -\u0026gt; f32 { let error = setpoint - measurement; // Proportional let p_term = self.kp * error; // Integral avec anti-windup self.integral += error * dt; self.integral = self.integral.clamp( -self.integral_limit, self.integral_limit ); let i_term = self.ki * self.integral; // Derivative avec filtre let derivative = (error - self.prev_error) / dt; let d_term = self.kd * derivative; self.prev_error = error; // Output avec saturation (p_term + i_term + d_term).clamp( -self.output_limit, self.output_limit ) } } 🛠️ Stack Technique Complète # Catégorie Technologies Firmware Rust no_std, RTIC, cortex-m, nb Hardware STM32F4, MPU6000, MAX7456, ESP32 (WiFi) Protocols DShot, ELRS/CRSF, MSP, MAVLink Tools probe-rs, cargo-embed, OpenOCD, defmt Testing Hardware-in-the-loop, SITL simulation 📊 Performances \u0026amp; Benchmarks # 🚁 Fonctionnalités Avancées # GPS RTH - Return to Home automatique Failsafe - Multi-niveaux configurables Auto-tune - Calibration PID par ML WiFi Config - Interface web via ESP32 Blackbox HD - 32MB de logs haute résolution 🏆 Tests en Conditions Réelles # 500+ heures de vol sans crash firmware Utilisé en compétition racing avec succès Latence stick-to-motor \u0026lt; 2ms Compatible avec 95% des frames du marché 🎓 Compétences Développées # Rust embarqué : no_std, RTIC, HAL development Temps réel : Interrupts, DMA, scheduling Théorie du contrôle : PID, filtres, stabilisation Protocoles drone : DShot, ELRS, MSP Hardware : Conception PCB, soudure SMD 🔗 Ressources du Projet # Code source \u0026 PCB designs Documentation \u0026 Build Guide Vidéos de vol \u0026 tutoriels Open Hardware \u0026amp; Software : FlightCore est 100% open source. Rejoignez la communauté et contribuez au futur du FPV ! ","date":"5 March 2024","externalUrl":null,"permalink":"/projets/drone-flight-controller/","section":"Projets","summary":"","title":"FlightCore - Contrôleur de Vol Open Source","type":"projets"},{"content":"","date":"5 March 2024","externalUrl":null,"permalink":"/tags/iot/","section":"Tags","summary":"","title":"IoT","type":"tags"},{"content":"","date":"5 March 2024","externalUrl":null,"permalink":"/tags/pid/","section":"Tags","summary":"","title":"PID","type":"tags"},{"content":"","date":"5 March 2024","externalUrl":null,"permalink":"/tags/rtos/","section":"Tags","summary":"","title":"RTOS","type":"tags"},{"content":"","date":"5 March 2024","externalUrl":null,"permalink":"/tags/rust/","section":"Tags","summary":"","title":"Rust","type":"tags"},{"content":"","date":"15 January 2024","externalUrl":null,"permalink":"/tags/docker/","section":"Tags","summary":"","title":"Docker","type":"tags"},{"content":"","date":"15 January 2024","externalUrl":null,"permalink":"/tags/go/","section":"Tags","summary":"","title":"Go","type":"tags"},{"content":" Système de monitoring distribué développé en Go, capable de gérer des millions de métriques par seconde avec une latence minimale. 🚀 100K+ métriques/seconde 🎯 Contexte du projet # Face aux limitations des solutions de monitoring existantes, j\u0026rsquo;ai développé GoMetrics, un système de monitoring distribué exploitant pleinement la puissance de Go pour offrir des performances exceptionnelles et une scalabilité horizontale.\nPerformance : Traitement de 100 000+ métriques par seconde avec une latence P99 \u0026lt; 10ms 🏗️ Architecture technique # Collecteurs Distribués Go \u0026#43; gRPC - Agents de collecte écrits en Go pur - Communication via gRPC pour minimiser la latence - Buffer circulaire lock-free pour les métriques - Gestion intelligente du backpressure Stockage Optimisé TimescaleDB - TimescaleDB pour les séries temporelles - Redis pour le cache et les alertes temps réel - Compression automatique des données historiques - Partitionnement intelligent par time bucket Visualisation Temps Réel WebSockets - Dashboard React avec graphiques temps réel - WebSockets pour les mises à jour instantanées - Agrégation côté serveur pour réduire la charge réseau - Export vers Grafana via API Prometheus Alerting Intelligent ML - Détection d'anomalies par machine learning - Règles d'alerte configurables en YAML - Intégration Slack, PagerDuty, email - Corrélation automatique des incidents 💻 Code \u0026amp; Implémentation # Collecteur haute performance en Go # // Exemple de collecteur optimisé avec pool de workers type MetricCollector struct { workers int queue chan *Metric buffer *ring.Buffer rpcClient pb.MetricsServiceClient } func (c *MetricCollector) Collect(ctx context.Context) { // Pool de goroutines pour traitement parallèle for i := 0; i \u0026lt; c.workers; i++ { go c.worker(ctx) } // Batch processing pour optimiser les envois ticker := time.NewTicker(100 * time.Millisecond) batch := make([]*pb.Metric, 0, 1000) for { select { case metric := \u0026lt;-c.queue: batch = append(batch, metric) if len(batch) \u0026gt;= 1000 { c.sendBatch(ctx, batch) batch = batch[:0] } case \u0026lt;-ticker.C: if len(batch) \u0026gt; 0 { c.sendBatch(ctx, batch) batch = batch[:0] } } } } Pipeline de traitement concurrent # Goroutines - 10K+ goroutines concurrentes Channels - Communication sans verrous Context - Gestion élégante des timeouts Sync.Pool - Réutilisation des allocations 🛠️ Stack technique # Catégorie Technologies Backend Go 1.21, gRPC, Protocol Buffers, Gin Storage TimescaleDB, Redis Cluster, S3 (archives) Infrastructure Kubernetes, Helm, Prometheus Operator Monitoring Grafana, Jaeger (tracing), ELK Stack CI/CD GitHub Actions, ArgoCD, Trivy (security) 📊 Résultats \u0026amp; Performances # 🔧 Optimisations clés # Zero-allocation dans le hot path grâce à sync.Pool Lock-free algorithms pour les buffers critiques Batch processing intelligent avec adaptative sizing Memory-mapped files pour les caches persistants SIMD optimizations pour l\u0026rsquo;agrégation de métriques 🎓 Apprentissages techniques # Ce projet m\u0026rsquo;a permis d\u0026rsquo;approfondir :\nProgrammation concurrente avancée en Go Optimisation de performance au niveau système Conception d\u0026rsquo;architectures distribuées résilientes Observabilité et debugging de systèmes complexes Gestion de données haute fréquence 🔗 Ressources # Code source sur GitHub Démo live (dashboard) Intéressé par du monitoring haute performance ? Contactez-moi pour discuter de vos besoins en observabilité ! ","date":"15 January 2024","externalUrl":null,"permalink":"/projets/microservice-monitoring/","section":"Projets","summary":"","title":"GoMetrics - Système de Monitoring Distribué","type":"projets"},{"content":"","date":"15 January 2024","externalUrl":null,"permalink":"/tags/grafana/","section":"Tags","summary":"","title":"Grafana","type":"tags"},{"content":"","date":"15 January 2024","externalUrl":null,"permalink":"/tags/grpc/","section":"Tags","summary":"","title":"GRPC","type":"tags"},{"content":"","date":"15 January 2024","externalUrl":null,"permalink":"/tags/kubernetes/","section":"Tags","summary":"","title":"Kubernetes","type":"tags"},{"content":"","date":"15 January 2024","externalUrl":null,"permalink":"/tags/prometheus/","section":"Tags","summary":"","title":"Prometheus","type":"tags"},{"content":"","date":"15 January 2024","externalUrl":null,"permalink":"/tags/redis/","section":"Tags","summary":"","title":"Redis","type":"tags"},{"content":"","date":"10 November 2023","externalUrl":null,"permalink":"/tags/ecs/","section":"Tags","summary":"","title":"ECS","type":"tags"},{"content":"","date":"10 November 2023","externalUrl":null,"permalink":"/tags/game-development/","section":"Tags","summary":"","title":"Game Development","type":"tags"},{"content":" Moteur de jeu 2D moderne écrit en Rust, exploitant la sécurité mémoire et les performances du langage pour créer des expériences de jeu fluides sur le web. ⚡ 60 FPS stable avec 10K+ entités 🎮 Présentation du projet # PixEngine est un moteur de jeu 2D que j\u0026rsquo;ai développé entièrement en Rust, avec pour objectif de démontrer qu\u0026rsquo;il est possible de créer des jeux web performants sans sacrifier la sécurité mémoire. Le moteur compile en WebAssembly pour une exécution native dans le navigateur.\nZero crash : Grâce à Rust, aucun crash dû à la mémoire depuis le début du projet 🏗️ Architecture \u0026amp; Design # Entity Component System (ECS) Architecture - Pattern ECS pur avec specs comme base - Séparation données/logique pour cache efficiency - Systems parallélisables automatiquement - Hot-reload des components en développement Renderer WebGL Optimisé Performance - Batching automatique des draw calls - Instanced rendering pour les sprites similaires - Atlas de textures généré à la compilation - Shaders GLSL compilés et optimisés Memory Safety by Design Rust - Aucune allocation dynamique dans la game loop - Ownership strict pour éviter les data races - Lifetimes explicites pour les ressources - Zero-cost abstractions partout WebAssembly First Web Native - Taille du binaire \u003c 200KB (gzipped) - Interop JavaScript minimale et typée - Streaming compilation support - SharedArrayBuffer pour le multithreading 💻 Implémentation technique # Système ECS en Rust # // Définition des components avec derive macros #[derive(Component, Debug)] struct Position { x: f32, y: f32, } #[derive(Component, Debug)] struct Velocity { dx: f32, dy: f32, } // System de mouvement parallélisable struct MovementSystem; impl\u0026lt;\u0026#39;a\u0026gt; System\u0026lt;\u0026#39;a\u0026gt; for MovementSystem { type SystemData = ( WriteStorage\u0026lt;\u0026#39;a, Position\u0026gt;, ReadStorage\u0026lt;\u0026#39;a, Velocity\u0026gt;, Read\u0026lt;\u0026#39;a, DeltaTime\u0026gt;, ); fn run(\u0026amp;mut self, (mut pos, vel, dt): Self::SystemData) { // Parallel iteration avec Rayon (\u0026amp;mut pos, \u0026amp;vel) .par_join() .for_each(|(pos, vel)| { pos.x += vel.dx * dt.0; pos.y += vel.dy * dt.0; }); } } Renderer WebGL avec zero-copy # // Vertex buffer avec mémoire partagée pub struct SpriteRenderer { vao: WebGlVertexArrayObject, instances: Vec\u0026lt;InstanceData\u0026gt;, buffer: Arc\u0026lt;SharedArrayBuffer\u0026gt;, } impl SpriteRenderer { pub fn render(\u0026amp;mut self, sprites: \u0026amp;[Sprite]) { // Update instances sans allocation self.instances.clear(); self.instances.extend( sprites.iter().map(|s| s.to_instance_data()) ); // Upload direct vers GPU unsafe { let data = std::slice::from_raw_parts( self.instances.as_ptr() as *const u8, self.instances.len() * std::mem::size_of::\u0026lt;InstanceData\u0026gt;() ); self.buffer.update_data(0, data); } // Draw call unique pour tous les sprites self.context.draw_arrays_instanced( WebGl2::TRIANGLES, 0, 6, self.instances.len() as i32 ); } } 🛠️ Technologies \u0026amp; Outils # Catégorie Technologies Core Rust 1.75, wasm-bindgen, web-sys Graphics WebGL 2.0, glam (math), image ECS specs, rayon (parallelism) Build wasm-pack, webpack, wasm-opt Dev Tools cargo-watch, wasm-bindgen-test 📊 Benchmarks \u0026amp; Performance # 🎯 Fonctionnalités du moteur # Sprite rendering - Batching, animations, atlases Audio - Web Audio API, spatial sound Input - Clavier, souris, gamepad, touch Physics - Intégration Rapier2D (Rust) Networking - WebRTC pour le multiplayer Scripting - API Rust ergonomique 🚀 Exemple de jeu # J\u0026rsquo;ai développé un jeu de démonstration \u0026ldquo;Space Defenders\u0026rdquo; utilisant PixEngine :\n1000+ vaisseaux ennemis simultanés Système de particules (10K+ particules) Collisions pixel-perfect Leaderboard online avec backend Rust 🎓 Compétences acquises # Ce projet m\u0026rsquo;a permis de maîtriser :\nRust avancé : unsafe code, FFI, macros procédurales WebAssembly : optimisation de taille, interop JS Architecture ECS : data-oriented design Optimisation GPU : batching, instancing, shaders Gestion mémoire : zero-allocation patterns 🔗 Liens du projet # Code source (MIT License) Démo jouable en ligne Documentation complète Envie de créer votre jeu web ? PixEngine est open source et prêt à l\u0026rsquo;emploi. Contactez-moi pour du support ! ","date":"10 November 2023","externalUrl":null,"permalink":"/projets/rust-game-engine/","section":"Projets","summary":"","title":"PixEngine - Moteur de Jeu 2D en Rust","type":"projets"},{"content":"","date":"10 November 2023","externalUrl":null,"permalink":"/tags/wasm/","section":"Tags","summary":"","title":"WASM","type":"tags"},{"content":"","date":"10 November 2023","externalUrl":null,"permalink":"/tags/webassembly/","section":"Tags","summary":"","title":"WebAssembly","type":"tags"},{"content":"","date":"10 November 2023","externalUrl":null,"permalink":"/tags/webgl/","section":"Tags","summary":"","title":"WebGL","type":"tags"},{"content":"","date":"May 20, 2023","externalUrl":null,"permalink":"/en/categories/academic-projects/","section":"Categories","summary":"","title":"Academic Projects","type":"categories"},{"content":"","date":"May 20, 2023","externalUrl":null,"permalink":"/en/series/but-computer-science/","section":"Series","summary":"","title":"BUT Computer Science","type":"series"},{"content":"","date":"20 May 2023","externalUrl":null,"permalink":"/series/but-informatique/","section":"Séries","summary":"","title":"BUT Informatique","type":"series"},{"content":"","date":"20 May 2023","externalUrl":null,"permalink":"/tags/chart.js/","section":"Tags","summary":"","title":"Chart.js","type":"tags"},{"content":"","date":"20 May 2023","externalUrl":null,"permalink":"/categories/projets-acad%C3%A9miques/","section":"Catégories","summary":"","title":"Projets Académiques","type":"categories"},{"content":"","date":"May 20, 2023","externalUrl":null,"permalink":"/en/tags/react.js/","section":"Tags","summary":"","title":"React.js","type":"tags"},{"content":"","date":"May 20, 2023","externalUrl":null,"permalink":"/en/tags/redux/","section":"Tags","summary":"","title":"Redux","type":"tags"},{"content":"","date":"20 May 2023","externalUrl":null,"permalink":"/tags/socket.io/","section":"Tags","summary":"","title":"Socket.io","type":"tags"},{"content":" Task Management Application # Development of a task management web application as part of the BUT Computer Science program.\nDescription # Intuitive user interface with drag-and-drop functionality Task system with priorities and deadlines Collaborative features (task sharing) Offline mode with synchronization Technologies Used # React.js: Frontend development Node.js \u0026amp; Express: Backend API MongoDB: NoSQL database Redux: Application state management Key Features # Customizable Kanban boards Advanced filters and search Notifications and reminders Productivity statistics Responsive interface (mobile/desktop) Results # Functional application deployed on Heroku Final grade: 17/20 Used as a reference tool for subsequent projects in the computer science department ","date":"May 20, 2023","externalUrl":null,"permalink":"/en/projets/application-gestion-taches/","section":"Projects","summary":"","title":"Task Management Application","type":"projets"},{"content":"","date":"10 September 2022","externalUrl":null,"permalink":"/series/d%C3%A9veloppement-discord/","section":"Séries","summary":"","title":"Développement Discord","type":"series"},{"content":" Discord Bot for Community Management # Development of a Discord bot to facilitate the management of a gaming community.\nDescription # Automated moderation system Custom commands Integration with game APIs Levels and rewards system Technologies Used # JavaScript: Main programming language Node.js: Runtime environment Discord.js: API for interacting with Discord MongoDB: Storage for user data and configurations Key Features # Automatic filtering of inappropriate messages Administration commands for moderators Integration with game APIs (real-time statistics) Activity-based leveling system Automated community event creation Results # Bot used by a community of over 500 members Significant reduction in workload for moderators User-friendly interface for non-technical users Improved community engagement ","date":"September 10, 2022","externalUrl":null,"permalink":"/en/projets/bot-discord-communaute/","section":"Projects","summary":"","title":"Discord Bot for Community Management","type":"projets"},{"content":"","date":"September 10, 2022","externalUrl":null,"permalink":"/en/series/discord-development/","section":"Series","summary":"","title":"Discord Development","type":"series"},{"content":"","date":"September 10, 2022","externalUrl":null,"permalink":"/en/tags/discord.js/","section":"Tags","summary":"","title":"Discord.js","type":"tags"},{"content":"","date":"September 10, 2022","externalUrl":null,"permalink":"/en/tags/javascript/","section":"Tags","summary":"","title":"JavaScript","type":"tags"},{"content":"","date":"June 15, 2021","externalUrl":null,"permalink":"/en/tags/arduino/","section":"Tags","summary":"","title":"Arduino","type":"tags"},{"content":"","date":"15 June 2021","externalUrl":null,"permalink":"/tags/capteurs-environnementaux/","section":"Tags","summary":"","title":"Capteurs Environnementaux","type":"tags"},{"content":" Environmental Monitoring System # Final project for the STI2D baccalaureate, creation of an air quality monitoring system.\nDescription # Air quality sensors (particles, CO2, humidity) Microcontroller for data collection and processing Web interface to visualize data in real time Automatic alert system Technologies Used # Arduino: Microcontroller programming Environmental sensors: Air quality measurement HTML/CSS/JavaScript: Web user interface PHP: Backend for data processing and storage Results # Functional system deployed in the school Real-time dashboard accessible by staff Automatic alerts when air quality thresholds are exceeded Final grade: 18/20 for the project ","date":"June 15, 2021","externalUrl":null,"permalink":"/en/projets/systeme-surveillance-environnementale/","section":"Projects","summary":"","title":"Environmental Monitoring System","type":"projets"},{"content":"","date":"June 15, 2021","externalUrl":null,"permalink":"/en/tags/environmental-sensors/","section":"Tags","summary":"","title":"Environmental Sensors","type":"tags"},{"content":"","date":"June 15, 2021","externalUrl":null,"permalink":"/en/tags/html/css/","section":"Tags","summary":"","title":"HTML/CSS","type":"tags"},{"content":"","date":"June 15, 2021","externalUrl":null,"permalink":"/en/tags/html/css/javascript/","section":"Tags","summary":"","title":"HTML/CSS/JavaScript","type":"tags"},{"content":"","date":"June 15, 2021","externalUrl":null,"permalink":"/en/tags/php/","section":"Tags","summary":"","title":"PHP","type":"tags"},{"content":"","date":"15 June 2021","externalUrl":null,"permalink":"/categories/projets-scolaires/","section":"Catégories","summary":"","title":"Projets Scolaires","type":"categories"},{"content":"","date":"June 15, 2021","externalUrl":null,"permalink":"/en/categories/school-projects/","section":"Categories","summary":"","title":"School Projects","type":"categories"},{"content":"","date":"June 15, 2021","externalUrl":null,"permalink":"/en/series/sti2d/","section":"Series","summary":"","title":"STI2D","type":"series"},{"content":" Athletics Club Website # Design and development of the official website for the Saint-Gély-du-Fesc athletics club.\nDescription # Club and activities presentation Event registration system Competition photo gallery News blog Technologies Used # WordPress HTML/CSS PHP JavaScript Link # www.saint-gely-athletisme.fr\nAchievements # Site architecture design WordPress theme customization Mobile and tablet optimization Administrator training for content management ","date":"September 15, 2020","externalUrl":null,"permalink":"/en/projets/site-athletisme/","section":"Projects","summary":"","title":"Athletics Club Website","type":"projets"},{"content":"","date":"September 15, 2020","externalUrl":null,"permalink":"/en/tags/wordpress/","section":"Tags","summary":"","title":"WordPress","type":"tags"},{"content":" Who I am # I am a computer science student at the University of Montpellier, passionate about web development and new technologies. My academic background and personal projects have allowed me to develop strong technical expertise, as well as great adaptability and learning capacity.\nMy approach # As a developer, I strive to create elegant and efficient solutions that perfectly meet user needs. I pay particular attention to:\nUser experience: intuitive and pleasant interfaces Code quality: clean, maintainable, and well-documented Performance: optimization and speed of execution Innovation: constant technological watch My interests # Outside of software development, I\u0026rsquo;m interested in:\nProduct design Emerging technologies Artificial intelligence Cybersecurity Contact me # Email: fievet.leon@free.fr leon.fievet@etu.umontpellier.fr Phone: 07 81 87 39 33 Website: pixnop.github.io LinkedIn: linkedin.com/in/leonfievet GitHub: github.com/pixnop Address: 42 rue du mas du juge, Saint gély du fesc, 34980 ","externalUrl":null,"permalink":"/en/apropos/","section":"Léon Fievet - Web Developer","summary":"","title":"About Me","type":"page"},{"content":" Contact Me # I am open to professional opportunities, project collaborations, or simply exchanging ideas about web development and computer science.\nContact Information # Email: fievet.leon@free.fr leon.fievet@etu.umontpellier.fr Phone: 07 81 87 39 33 Social Media and Profiles # LinkedIn: linkedin.com/in/leonfievet GitHub: github.com/pixnop Website: pixnop.github.io Location # I am based in Montpellier, France, but I am open to remote work opportunities.\nAvailability # Feel free to contact me with any questions or proposals. I aim to respond within 24-48 hours.\nFor professional inquiries, please prefer contact via email or LinkedIn. ","externalUrl":null,"permalink":"/en/contact/","section":"Léon Fievet - Web Developer","summary":"","title":"Contact","type":"page"},{"content":" Education # Bachelor\u0026rsquo;s Degree in Computer Science # IUT Montpellier-Sète, University of Montpellier | 2021 - 2024 | Work-study at ECO-MED\nComputer science education with specialization in application development and application/data integration.\nAcquired Skills:\nWeb and mobile application development Object-oriented programming Database design and administration Information systems analysis and design IT project management Agile methodologies (Scrum) DevOps and continuous integration Team development and Git usage Notable Academic Projects:\nDevelopment of a task management application with React and Node.js Creation of a RESTful API with authentication Final year project: Environmental management application for ECO-MED Technological Baccalaureate in STI2D # Pierre Rouge High School, Montpellier | 2019 - 2021 | With Honors\nSpecialization in SIN (Information Systems and Digital)\nAcquired Skills:\nProgramming fundamentals Electronic system design Knowledge of materials architecture Collaborative technical project Main Project:\nDesign and development of a connected environmental monitoring system Additional Certifications # BNSSA (National Water Safety and Rescue Certificate) # French Federation of Lifesaving and First Aid | 2022\nProfessional certification allowing to work as a lifeguard.\nPSE1 (Team First Aid Level 1) # Civil Protection | 2022 - 2023\nTraining in team first aid and emergency situations.\nContinuing Education # Online Certifications # Introduction to React (Codecademy) Advanced JavaScript (Udemy) Full Stack Development with MERN (MongoDB, Express, React, Node.js) Languages # French: Native language English: B2 level (advanced independent user) Spanish: Basic knowledge ","externalUrl":null,"permalink":"/en/formation/","section":"Léon Fievet - Web Developer","summary":"","title":"Education","type":"page"},{"content":" Professional Experience # FullStack Developer # ECO-MED Montpellier | July - August 2024\nAs a fullstack developer, I contributed to the modernization of the company\u0026rsquo;s digital tools:\nDevelopment of a centralized application hub to improve productivity Design and implementation of business applications: Internal carpooling platform Weather monitoring system for field teams Automated document generation tool Optimization of existing tools for better performance Application of agile methodologies and use of collaborative tools (Git) Close collaboration with business teams to define precise needs Technologies: JavaScript, Node.js, React, MongoDB, Express, Git\nSoftware Development Internship # ECO-MED Montpellier | April - June 2024 | 12 weeks\nFinal study internship at the environmental consulting firm ECO-MED, focused on:\nNeeds analysis and development of customized solutions Participation in the redesign of internal applications Learning professional work methods Integration and testing of new features Technologies: JavaScript, HTML/CSS, PHP, MySQL, Git\nLifeguard # Domaine des Mûriers Campground | Summer 2023\nPool surveillance and swimmer safety Organization of water activities Maintenance management of facilities Responsibility for compliance with safety standards Website Creation # Saint-Gély-du-Fesc Athletics Club | 2020\nDesign and development of the website www.saint-gely-athletisme.fr Independent work to meet the club\u0026rsquo;s needs Content management and site maintenance Training administrators in content management Technologies: WordPress, HTML/CSS, PHP\nKitchen Work # La Boucherie Restaurant | 2021\nMeal preparation under chef supervision Food stock management Compliance with HACCP hygiene standards Teamwork in a fast-paced environment ","externalUrl":null,"permalink":"/en/experience/","section":"Léon Fievet - Web Developer","summary":"","title":"Professional Experience","type":"page"},{"content":"","externalUrl":null,"permalink":"/en/skills/","section":"Skills","summary":"","title":"Skills","type":"skills"},{"content":" Skills # Programming Languages # Advanced: JavaScript, HTML/CSS, SQL Intermediate: Python, Java, PHP, Go Basic: C/C++, TypeScript, Rust Frameworks \u0026amp; Libraries # Frontend: React, Vue.js, Bootstrap, Tailwind CSS Backend: Node.js, Express, Laravel Mobile: React Native Databases # PostgreSQL, MySQL, MongoDB Database management, optimization, and maintenance Data schema design Development Tools # Git \u0026amp; GitHub Docker VS Code, JetBrains IDEs Agile methods (Scrum, Kanban) CI/CD (GitHub Actions) Software Architecture # RESTful API design MVC architecture Microservices SOLID principles Design \u0026amp; UI/UX # Figma Adobe Creative Suite Prototyping and wireframing Usability testing Personal Skills # Effective communication Problem-solving Teamwork Autonomy and continuous learning Project management Technical Passions # FPV Drones # FPV (First Person View) drone pilot since 2019 Building and configuring custom drones Video editing and production 3D Printing (FDM / SLA) # Experience with two 3D printing technologies: FDM (Fused Deposition Modeling) SLA (Stereolithography) 3D modeling with Fusion 360 Rapid prototyping ","externalUrl":null,"permalink":"/en/competences/","section":"Léon Fievet - Web Developer","summary":"","title":"Skills","type":"page"}]